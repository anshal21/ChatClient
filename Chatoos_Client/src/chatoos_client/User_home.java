/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatoos_client;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author Anshal Dwivedi
 */
public class User_home extends javax.swing.JFrame {
   public static ArrayList<Integer> friend=new ArrayList<Integer>();
    DefaultListModel DLM=new DefaultListModel();
    
    /**
     * Creates new form User_home
     */
    String username,name,id;
    int port,idel=0;
    DataInputStream dis;
    DataOutputStream dos;
    public User_home(String uname,String name,String id,int port) {
        this.getContentPane().setBackground(new Color(61,145,64));
        this.name=name;
        username=uname;
        this.id=id;
        this.port=port;
        
        initComponents();
    }
    public void prepare_home()
    {
        friend_list.setModel(DLM);
        //DLM.addElement("indsi");
        System.out.println(friend);
        System.out.println("this side requesting for port "+port);
        welcome.setText("Welcome! "+name);
        uname.setText(username+" with id "+id);
        Socket s;
        try {
        s = new Socket(InetAddress.getLocalHost(), port);
        
           dis=new DataInputStream(s.getInputStream());
           dos=new DataOutputStream(s.getOutputStream());
          String wl=dis.readUTF();
          start_listening();
        System.out.println(wl);
//        this.addKeyListener(this);
        } catch (IOException ex) {
          Logger.getLogger(User_home.class.getName()).log(Level.SEVERE, null, ex);
        }
       
            }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uname = new javax.swing.JLabel();
        welcome = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        friend_list = new javax.swing.JList();
        write = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        chat_panel = new javax.swing.JTextArea();
        send = new javax.swing.JButton();
        fri = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        logout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        uname.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        welcome.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        friend_list.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "1", "2", "3", "4", "5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(friend_list);

        write.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                writeKeyPressed(evt);
            }
        });

        chat_panel.setColumns(20);
        chat_panel.setRows(5);
        jScrollPane2.setViewportView(chat_panel);

        send.setText("Se");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });
        send.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sendKeyPressed(evt);
            }
        });

        fri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                friActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        add.setText("+");
        add.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        logout.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        logout.setText("Log Out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110)
                .addComponent(logout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(fri)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(write, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logout))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(write)
                            .addComponent(send, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fri, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        try {
            // TODO add your handling code here:
            int s= friend_list.getSelectedIndex();
            int t=friend.get(s);
            
            int j=0;
            
          /*  while(j<s.length())
            {
                t=t*10+s.charAt(j)-48;
                j++;
            }*/
            j=0;
            
            while(j<id.length())
            {
                idel=idel*10+id.charAt(j)-48;
                j++;
            }
          //  System.out.println(s.charAt(0)+" "+t);
            System.out.println(t+"hry");
            dos.writeInt(t);
            dos.writeUTF(username);
            dos.writeUTF(write.getText());
            chat_panel.append("ME :  "+write.getText()+"\n");
            write.setText(null);
        } catch (IOException ex) {
            Logger.getLogger(User_home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sendActionPerformed

    private void sendKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sendKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            send.doClick();
        }
    }//GEN-LAST:event_sendKeyPressed

    private void writeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_writeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            send.doClick();
        }
    }//GEN-LAST:event_writeKeyPressed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
       try {
           // TODO add your handling code here:
           dos.writeInt(-1);
           dos.writeInt(idel);
        dos.writeUTF("sa");
        System.exit(0);
       } catch (IOException ex) {
           Logger.getLogger(User_home.class.getName()).log(Level.SEVERE, null, ex);
       }
        
    }//GEN-LAST:event_logoutActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        String f=fri.getText();
        if(!f.equals(null)||f.equals("")){
            try {
                dos.writeInt(-12);//just a signal to add friend
                dos.writeUTF(f);
                dos.writeUTF(id);
            } catch (IOException ex) {
                Logger.getLogger(User_home.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        }
    }//GEN-LAST:event_addActionPerformed

    private void friActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_friActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_friActionPerformed
    public void start_listening(){
        Runnable runner=new Runnable() {

            @Override
            public void run() {
                while(true)
                {
                    try {
                        String fr=dis.readUTF();
                       // System.out.println("you have msg from"+fr);
                        friend_list.setSelectedValue(fr, rootPaneCheckingEnabled);
                        
                        String s=dis.readUTF();
                        chat_panel.append(fr+" : "+s+"\n");
                    } catch (IOException ex) {
                        Logger.getLogger(User_home.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        Thread ty=new Thread(runner);
        ty.start();
    }
    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextArea chat_panel;
    private javax.swing.JTextField fri;
    public static javax.swing.JList friend_list;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton logout;
    private javax.swing.JButton send;
    private javax.swing.JLabel uname;
    private javax.swing.JLabel welcome;
    private javax.swing.JTextField write;
    // End of variables declaration//GEN-END:variables

   
}
